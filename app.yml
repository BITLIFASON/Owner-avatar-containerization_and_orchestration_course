kind: Deployment
apiVersion: apps/v1
metadata:
  name: fastapi-app
  labels:
    app: fastapi-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fastapi-app
  template:
    metadata:
      labels:
        app: fastapi-app
    spec:
      volumes:
        - name: app-data
      containers:
      - name: fastapi-app
        image: bit/fastapi-app:latest
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 250m
            memory: 128Mi
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        envFrom:
            - configMapRef:
                name: postgres-configmap
            - secretRef:
                name: postgres-secret
        volumeMounts:
          - name: app-data
            mountPath: /data
        command: ["python", "main.py"]
        imagePullPolicy: "Never"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 10
          failureThreshold: 3
          successThreshold: 1
      initContainers:
        - name: init-db
          image: bit/init-db:latest
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          imagePullPolicy: "Never"
          envFrom:
            - configMapRef:
                name: postgres-configmap
            - secretRef:
                name: postgres-secret
          command: ['/bin/bash', '-c', '/data/init_db.sh']
      restartPolicy: Always
      dnsPolicy: ClusterFirst